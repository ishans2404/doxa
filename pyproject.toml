[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "doxa"
version = "0.0.1"
description = "A modular, intelligent ML/DL library with automatic device management"
authors = [
    {name = "Ishan Singh", email = "ishans2404@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["machine learning", "deep learning", "artificial intelligence", "gpu", "numpy", "tensor"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib",
]

[project.optional-dependencies]
gpu = ["cupy-cuda12x>=9.0.0"]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "pre-commit",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme",
    "myst-parser",
]
all = ["doxa[gpu,dev,docs]"]

[project.urls]
Homepage = "https://github.com/ishans2404/doxa"
Documentation = "https://doxa.readthedocs.io/"
Repository = "https://github.com/ishans2404/doxa"
"Bug Tracker" = "https://github.com/ishans2404/doxa/issues"

[project.scripts]
doxa = "doxa.cli:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["doxa*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
doxa = ["py.typed"]

# Black formatting configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

# MyPy type checking configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=doxa",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
markers = [
    "gpu: marks tests as requiring a CUDA-capable GPU (deselect with '-m \"not gpu\"')",
    "slow: marks tests as slow (expected runtime >10s, deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["doxa"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError", 
    "raise NotImplementedError",
]
